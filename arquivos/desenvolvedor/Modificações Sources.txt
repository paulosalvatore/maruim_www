Arquivo enums.h
	Linha 23
		enum BugReportType_t : uint8_t {
			BUG_CATEGORY_MAP = 0,
			BUG_CATEGORY_TYPO = 1,
			BUG_CATEGORY_TECHNICAL = 2,
			BUG_CATEGORY_OTHER = 3
		};
Arquivo game.cpp
	Linha 4844
		void Game::playerReportBug(uint32_t playerId, const std::string& message, const Position position)
		{
			Player* player = getPlayerByID(playerId);
			if (!player) {
				return;
			}

			std::string fileName = "data/reports/" + player->getName() + " report.txt";
			FILE* file = fopen(fileName.c_str(), "a");
			if (file) {
				fprintf(file, "------------------------------\nName: %s [Position: %u, %u, %u]\nBug Report: %s\n", player->getName().c_str(), position.x, position.y, position.z, message.c_str());
				fclose(file);
			}

			player->sendTextMessage(MESSAGE_EVENT_DEFAULT, "Your report has been sent to " + g_config.getString(ConfigManager::SERVER_NAME) + ".");
		}
Arquivo game.h
	Linha 318
		void playerReportBug(uint32_t playerId, const std::string& message, const Position position);
Arquivo protocolgame.cpp
	Linha 1060
		void ProtocolGame::parseBugReport(NetworkMessage& msg)
		{
			uint8_t category = msg.getByte();
			std::string message = msg.getString();

			Position position;
			if (category == BUG_CATEGORY_MAP) {
				position = msg.getPosition();
			} else {
				position = player->getPosition();
			}
			addGameTask(&Game::playerReportBug, player->getID(), message, position);
		}
	Linha 2440
		msg.addByte(0x01); // can report bugs?
Arquivo luascript.cpp
	Linha 2230
		registerMethod("Player", "createParty", LuaScriptInterface::luaPlayerCreateParty);
	Linha 9086
		int LuaScriptInterface::luaPlayerCreateParty(lua_State* L)
		{
			// player:createParty(targetPlayer[, joinTargetPlayer = false])
			Player* player = getUserdata<Player>(L, 1);
			Player* targetPlayer = getUserdata<Player>(L, 2);
			if (!player || !targetPlayer) {
				lua_pushnil(L);
				return 1;
			}

			Party* partyPlayer = player->getParty();
			Party* partyInvitedPlayer = targetPlayer->getParty();

			if (!partyPlayer && !partyInvitedPlayer) {
				partyPlayer = new Party(player);
				partyPlayer->invitePlayer(*targetPlayer);
				bool joinTargetPlayer = getBoolean(L, 3, false);
				if (joinTargetPlayer) {
					partyPlayer->joinParty(*targetPlayer);
				}
				pushUserdata<Party>(L, partyPlayer);
				setMetatable(L, -1, "Party");
			}
			return 1;
		}
Arquivo luascript.h
	Linha 936
		static int luaPlayerCreateParty(lua_State* L);